/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.1 (3.7)
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IkeProposalEncryptionAlgorithm {
    /// * `aes-128-cbc` - 128-bit AES (CBC) * `aes-128-gcm` - 128-bit AES (GCM) * `aes-192-cbc` - 192-bit AES (CBC) * `aes-192-gcm` - 192-bit AES (GCM) * `aes-256-cbc` - 256-bit AES (CBC) * `aes-256-gcm` - 256-bit AES (GCM) * `3des-cbc` - DES
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<Value>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<Label>,
}

impl IkeProposalEncryptionAlgorithm {
    pub fn new() -> IkeProposalEncryptionAlgorithm {
        IkeProposalEncryptionAlgorithm {
            value: None,
            label: None,
        }
    }
}

/// * `aes-128-cbc` - 128-bit AES (CBC) * `aes-128-gcm` - 128-bit AES (GCM) * `aes-192-cbc` - 192-bit AES (CBC) * `aes-192-gcm` - 192-bit AES (GCM) * `aes-256-cbc` - 256-bit AES (CBC) * `aes-256-gcm` - 256-bit AES (GCM) * `3des-cbc` - DES
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Value {
    #[serde(rename = "aes-128-cbc")]
    Aes128Cbc,
    #[serde(rename = "aes-128-gcm")]
    Aes128Gcm,
    #[serde(rename = "aes-192-cbc")]
    Aes192Cbc,
    #[serde(rename = "aes-192-gcm")]
    Aes192Gcm,
    #[serde(rename = "aes-256-cbc")]
    Aes256Cbc,
    #[serde(rename = "aes-256-gcm")]
    Aes256Gcm,
    #[serde(rename = "3des-cbc")]
    Variant3desCbc,
}

impl Default for Value {
    fn default() -> Value {
        Self::Aes128Cbc
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Label {
    #[serde(rename = "128-bit AES (CBC)")]
    Variant128BitAesLeftParenthesisCbcRightParenthesis,
    #[serde(rename = "128-bit AES (GCM)")]
    Variant128BitAesLeftParenthesisGcmRightParenthesis,
    #[serde(rename = "192-bit AES (CBC)")]
    Variant192BitAesLeftParenthesisCbcRightParenthesis,
    #[serde(rename = "192-bit AES (GCM)")]
    Variant192BitAesLeftParenthesisGcmRightParenthesis,
    #[serde(rename = "256-bit AES (CBC)")]
    Variant256BitAesLeftParenthesisCbcRightParenthesis,
    #[serde(rename = "256-bit AES (GCM)")]
    Variant256BitAesLeftParenthesisGcmRightParenthesis,
    #[serde(rename = "DES")]
    Des,
}

impl Default for Label {
    fn default() -> Label {
        Self::Variant128BitAesLeftParenthesisCbcRightParenthesis
    }
}

