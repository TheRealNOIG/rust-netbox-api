/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.1 (3.7)
 * 
 * Generated by: https://openapi-generator.tech
 */

/// WritableIpSecProfileRequest : Adds support for custom fields and tags.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WritableIpSecProfileRequest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// * `esp` - ESP * `ah` - AH
    #[serde(rename = "mode")]
    pub mode: Mode,
    #[serde(rename = "ike_policy")]
    pub ike_policy: i32,
    #[serde(rename = "ipsec_policy")]
    pub ipsec_policy: i32,
    #[serde(rename = "comments", skip_serializing_if = "Option::is_none")]
    pub comments: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::NestedTagRequest>>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl WritableIpSecProfileRequest {
    /// Adds support for custom fields and tags.
    pub fn new(name: String, mode: Mode, ike_policy: i32, ipsec_policy: i32) -> WritableIpSecProfileRequest {
        WritableIpSecProfileRequest {
            name,
            description: None,
            mode,
            ike_policy,
            ipsec_policy,
            comments: None,
            tags: None,
            custom_fields: None,
        }
    }
}

/// * `esp` - ESP * `ah` - AH
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Mode {
    #[serde(rename = "esp")]
    Esp,
    #[serde(rename = "ah")]
    Ah,
}

impl Default for Mode {
    fn default() -> Mode {
        Self::Esp
    }
}

