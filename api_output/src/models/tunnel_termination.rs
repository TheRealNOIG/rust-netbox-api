/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.1 (3.7)
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TunnelTermination : Adds support for custom fields and tags.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TunnelTermination {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "display")]
    pub display: String,
    #[serde(rename = "tunnel")]
    pub tunnel: Box<crate::models::NestedTunnel>,
    #[serde(rename = "role")]
    pub role: Box<crate::models::TunnelTerminationRole>,
    #[serde(rename = "termination_type")]
    pub termination_type: String,
    #[serde(rename = "termination_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub termination_id: Option<Option<i64>>,
    #[serde(rename = "termination", deserialize_with = "Option::deserialize")]
    pub termination: Option<serde_json::Value>,
    #[serde(rename = "outside_ip", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub outside_ip: Option<Option<Box<crate::models::NestedIpAddress>>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::NestedTag>>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "created", deserialize_with = "Option::deserialize")]
    pub created: Option<String>,
    #[serde(rename = "last_updated", deserialize_with = "Option::deserialize")]
    pub last_updated: Option<String>,
}

impl TunnelTermination {
    /// Adds support for custom fields and tags.
    pub fn new(id: i32, url: String, display: String, tunnel: crate::models::NestedTunnel, role: crate::models::TunnelTerminationRole, termination_type: String, termination: Option<serde_json::Value>, created: Option<String>, last_updated: Option<String>) -> TunnelTermination {
        TunnelTermination {
            id,
            url,
            display,
            tunnel: Box::new(tunnel),
            role: Box::new(role),
            termination_type,
            termination_id: None,
            termination,
            outside_ip: None,
            tags: None,
            custom_fields: None,
            created,
            last_updated,
        }
    }
}


